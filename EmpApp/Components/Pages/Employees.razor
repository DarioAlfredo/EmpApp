@page "/employees"

@using System.ComponentModel.DataAnnotations
@using EmpApp.Components.Data
@using EmpApp.Components.Models
@using EmpApp.Components.Services
@inject IEmployeeService EmployeeService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<h1>Employees</h1>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>DOB</th>
            <th>Active</th>
            <th>Title</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var emp in employees)
        {
            <tr>
                <td>@emp.EmployeeID</td>
                <td>@emp.FirstName</td>
                <td>@emp.LastName</td>
                <td>@emp.DOB.ToShortDateString()</td>
                <td>@(emp.IsActive ? "Yes" : "No")</td>
                <td>@emp.EmployeeTitle</td>
                <td>
                    <button type="button" class="btn btn-primary" @onclick="() => EditEmployee(emp.EmployeeID)">Edit</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code
{
    private EmployeeDto Employee = new EmployeeDto();

    private IEnumerable<EmployeeDto> employees = Enumerable.Empty<EmployeeDto>();

    protected override async Task OnInitializedAsync()
    {
        employees = await EmployeeService.GetEmployeesAsync();
    }

    private async Task EditEmployee(int employeeId)
    {
        Console.WriteLine("Button clicked!");
        await JS.InvokeVoidAsync("alert", $"EditEmployee called for ID: {employeeId}");
        NavigationManager.NavigateTo($"/employees/edit/{employeeId}");
    }
}

@page "/employees"

@using System.ComponentModel.DataAnnotations
@using EmpApp.Components.Data
@using EmpApp.Components.Models
@using EmpApp.Components.Services
@inject IEmployeeService EmployeeService
@inject NavigationManager NavigationManager

<h1>Employees</h1>

<div class="mb-3">
    <button class="btn btn-success" @onclick="AddEmployee">New Employee</button>
</div>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>DOB</th>
            <th>Active</th>
            <th>Title</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var emp in PagedEmployees)
        {
            <tr>
                <td>@emp.EmployeeID</td>
                <td>@emp.FirstName</td>
                <td>@emp.LastName</td>
                <td>@emp.DOB.ToShortDateString()</td>
                <td>@(emp.IsActive ? "Yes" : "No")</td>
                <td>@emp.EmployeeTitle</td>
                <td>
                    <button type="button" class="btn btn-primary" @onclick="() => EditEmployee(emp.EmployeeID)">Edit</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-between align-items-center mt-3">
    <button class="btn btn-secondary" @onclick="PrevPage" disabled="@(CurrentPage == 1)">Previous</button>
    <span>Page @CurrentPage of @TotalPages</span>
    <button class="btn btn-secondary" @onclick="NextPage" disabled="@(CurrentPage == TotalPages)">Next</button>
</div>

@code
{
    private EmployeeDto Employee = new EmployeeDto();
    private List<EmployeeDto> employees = new();

    private int PageSize = 10;
    private int CurrentPage = 1;
    private int TotalPages => (int)Math.Ceiling((double)employees.Count / PageSize);
    private IEnumerable<EmployeeDto> PagedEmployees => employees.Skip((CurrentPage - 1) * PageSize).Take(PageSize);

    protected override async Task OnInitializedAsync()
    {
        employees = (await EmployeeService.GetEmployeesAsync()).ToList();
    }

    private void EditEmployee(int employeeId)
    {
        NavigationManager.NavigateTo($"/employees/edit/{employeeId}");
    }

    private void AddEmployee()
    {
        NavigationManager.NavigateTo("/employees/add");
    }

    private void PrevPage()
    {
        if (CurrentPage > 1)
            CurrentPage--;
    }

    private void NextPage()
    {
        if (CurrentPage < TotalPages)
            CurrentPage++;
    }
}
